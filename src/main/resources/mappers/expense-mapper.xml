<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.codenova.moneylog.repository.ExpenseRepository">

    <insert id="save">
        insert into expenses (user_id, expense_date, description, amount, category_id)
        values (#{userId}, #{expenseDate}, #{description}, #{amount}, #{categoryId})
    </insert>
    <select id="findByUserId" resultType="expense">
        select * from expenses where user_id=#{userId}  order by expense_date asc, id asc
    </select>
    <select id="findWithCategoryByUserId" resultType="expenseWithCategory">
        select
        e.*,
        c.name as category_name
        from expenses e join categorys c
        on e.category_id = c.id
        where user_id=#{userId}  order by expense_date asc, id asc
    </select>

    <select id="findByUserIdAndDuration" resultType="expenseWithCategory">
        select expenses.*, categorys.name as category_name from expenses
        join categorys on expenses.category_id = categorys.id
        where user_id=#{userId} and expense_date between #{startDate} and #{endDate}
        order by expense_date asc, id asc
    </select>

    <select id="getTotalAmountByPeriod" resultType="long">
        select ifnull(sum(amount), 0) as total from expenses
        where user_id = #{userId}
        and expense_date between #{startDate} and #{endDate};
    </select>

    <select id="getTop3ExpensesByPeriod" resultType="expenseWithCategory">
    select  e.*, c.name as category_name from expenses e join categorys c
    on e.category_id = c.id
    where user_id= #{userId} and expense_date between #{startDate} and #{endDate}
    order by amount desc limit 3;
    </select>

    <select id="getCategoryExpenseByPeriod" resultType="expenseWithCategoryAndTotal">
        select e.*, c.name as category_name, sum(amount) as total from expenses e join categorys c
        on e.category_id = c.id
        where user_id=#{userId} and expense_date between #{startDate} and #{endDate}
        group by category_id
        order by total desc
    </select>


</mapper>